/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import com.sun.org.apache.bcel.internal.generic.AALOAD;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import messagepassing.Batch;
import messagepassing.Mensaje;
import messagepassing.Proceso;
import messagepassing.SingletonConfiguracion;
import messagepassing.TipoContenido;

/**
 *
 * @author Sebas
 */
public class Interactivo extends javax.swing.JFrame {

    public String urlTemporal;

    /**
     * Creates new form Interactivo
     */
    public Interactivo() {

        initComponents();
        if (SingletonConfiguracion.Formato != TipoContenido.Texto) {
            this.jTextArea1.setVisible(false);// no lo desaparece si no que lo bloquea
            this.BotonSend.setEnabled(false);
            this.Upload.setEnabled(true);
        }

        if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
            this.jComboBox2.setVisible(false);
            this.jComboBox3.setVisible(false);

        } else {
            this.jComboBox2.setVisible(true);
            this.jComboBox3.setVisible(true);

        }

        if (SingletonConfiguracion.indirectoEstatico == true) {
            this.Subscribe.setVisible(true);
        } else {
            this.Subscribe.setVisible(false);
        }

        if (SingletonConfiguracion.prioridad == false) {
            this.PrioridadComboBox.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jLabel1 = new javax.swing.JLabel();
        BotonSend = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<String>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Upload = new javax.swing.JButton();
        PrioridadComboBox = new javax.swing.JComboBox<String>();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<String>();
        jComboBox4 = new javax.swing.JComboBox<String>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        Recibir = new javax.swing.JButton();
        Subscribe = new javax.swing.JButton();
        DisplaySistema = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(102, 0, 0));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(102, 102, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
        });
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComboBox1MousePressed(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jLabel1.setText("Proceso");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 29, -1, -1));

        BotonSend.setText("Send");
        BotonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSendActionPerformed(evt);
            }
        });
        jPanel1.add(BotonSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, -1, -1));

        jLabel2.setText("De");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 52, -1, -1));

        jLabel3.setText("Para");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 78, -1, -1));

        jComboBox2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox2FocusGained(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 300, 100));

        Upload.setText("Upload");
        Upload.setEnabled(false);
        Upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadActionPerformed(evt);
            }
        });
        jPanel1.add(Upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, -1, -1));

        PrioridadComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        jPanel1.add(PrioridadComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, -1, -1));

        jTabbedPane1.addTab("Send", jPanel1);

        jPanel2.setBackground(new java.awt.Color(153, 102, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Procesos");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 27, -1, -1));

        jLabel5.setText("De parte de");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 47, -1, -1));
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 67, -1, -1));

        jLabel7.setText("Para");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 73, -1, -1));

        jComboBox3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox3FocusGained(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        jComboBox4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox4FocusGained(evt);
            }
        });
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, -1, -1));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 280, 130));

        Recibir.setText("Recibir");
        Recibir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecibirActionPerformed(evt);
            }
        });
        jPanel2.add(Recibir, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, -1, -1));

        Subscribe.setText("Subscribe ");
        Subscribe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubscribeActionPerformed(evt);
            }
        });
        jPanel2.add(Subscribe, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, -1));

        DisplaySistema.setText("Display del Sistema");
        DisplaySistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySistemaActionPerformed(evt);
            }
        });
        jPanel2.add(DisplaySistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, -1, -1));

        jTabbedPane1.addTab("Receive", jPanel2);

        jButton1.setText("Cargar Batch");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jButton1)
                .addContainerGap(192, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jButton1)
                .addContainerGap(233, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Batch", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DisplaySistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySistemaActionPerformed
        DisplayActual display = new DisplayActual();
        display.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_DisplaySistemaActionPerformed

    private void SubscribeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubscribeActionPerformed

        String id = this.jComboBox4.getSelectedItem().toString();
        System.out.println("El item combobox 4 es " + id);
        Proceso.Subscribe(id);
        this.Subscribe.setEnabled(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_SubscribeActionPerformed

    private void RecibirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecibirActionPerformed

        String Mensaje;
        if (TipoContenido.Texto == SingletonConfiguracion.Formato) {
            if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
                Mensaje = Proceso.receive(this.jComboBox4.getSelectedItem().toString(), "");//new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                this.jTextArea2.setText(Mensaje);
                this.Subscribe.setEnabled(true);
            }
            if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                Mensaje = Proceso.receive(this.jComboBox4.getSelectedItem().toString(), this.jComboBox3.getSelectedItem().toString());//new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                this.jTextArea2.setText(Mensaje);

            }
        } else if (TipoContenido.Imagen == SingletonConfiguracion.Formato) {
            if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
                Mensaje = Proceso.receive(this.jComboBox4.getSelectedItem().toString(), "");//new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                ImagenDisplay a = new ImagenDisplay();
                a.setVisible(true);
            }
            if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                Mensaje = Proceso.receive(this.jComboBox4.getSelectedItem().toString(), this.jComboBox3.getSelectedItem().toString());//new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                ImagenDisplay a = new ImagenDisplay();
                a.setVisible(true);

            }

        } else if (TipoContenido.Video == SingletonConfiguracion.Formato) {
            if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
                Mensaje = Proceso.receive(this.jComboBox4.getSelectedItem().toString(), "");//new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                JframeVideo reproductor = new JframeVideo();
                reproductor.setVisible(true);
            }
            if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                Mensaje = Proceso.receive(this.jComboBox4.getSelectedItem().toString(), this.jComboBox3.getSelectedItem().toString());//new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                JframeVideo reproductor = new JframeVideo();
                reproductor.setVisible(true);
            }
        } else {
            if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
                Mensaje = Proceso.receive(this.jComboBox4.getSelectedItem().toString(), "");//new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                AudioDisplay audio;
                try {
                    audio = new AudioDisplay();
                    audio.setVisible(true);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Interactivo.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                Mensaje = Proceso.receive(this.jComboBox4.getSelectedItem().toString(), this.jComboBox3.getSelectedItem().toString());//new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                AudioDisplay audio;
                try {
                    audio = new AudioDisplay();
                    audio.setVisible(true);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Interactivo.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }

        /* if (TipoContenido.Imagen == SingletonConfiguracion.Formato) {
            ImagenDisplay img = new ImagenDisplay();
            img.setVisible(true);

        } else if (TipoContenido.Texto == SingletonConfiguracion.Formato) {
            this.jTextArea2.setText(SingletonConfiguracion.mensaje);
        }*/
        /// faltan los otros casos
        // TODO add your handling code here:
    }//GEN-LAST:event_RecibirActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox4FocusGained
        DefaultComboBoxModel model = (DefaultComboBoxModel) this.jComboBox4.getModel();
        model.removeAllElements();
        if (SingletonConfiguracion.indirectoDinamico != true && SingletonConfiguracion.indirectoEstatico != true) {
            for (int i = 0; i < SingletonConfiguracion.ListaDeProcesos.size() - 2; i++) {

                if (SingletonConfiguracion.ListaDeProcesos.get(i).getIdentificadorProceso() != this.jComboBox3.getSelectedItem().toString()) {
                    model.addElement(SingletonConfiguracion.ListaDeProcesos.get(i).getIdentificadorProceso());
                }
            }
            this.jComboBox4.setModel(model);
        } else {
            for (int i = 0; i < SingletonConfiguracion.ListaDeProcesos.size() - 2; i++) {

                model.addElement(SingletonConfiguracion.ListaDeProcesos.get(i).getIdentificadorProceso());

            }
            this.jComboBox4.setModel(model);
        }
    }//GEN-LAST:event_jComboBox4FocusGained

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox3FocusGained

        DefaultComboBoxModel model = (DefaultComboBoxModel) this.jComboBox3.getModel();
        model.removeAllElements();
        for (int i = 0; i < SingletonConfiguracion.ListaDeProcesos.size() - 2; i++) {
            model.addElement(SingletonConfiguracion.ListaDeProcesos.get(i).getIdentificadorProceso());
        }
        this.jComboBox3.setModel(model);
    }//GEN-LAST:event_jComboBox3FocusGained

    private void UploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadActionPerformed

        JFileChooser Chooser = new JFileChooser();
        Chooser.showOpenDialog(null);
        File f = Chooser.getSelectedFile();
        SingletonConfiguracion.f2 = Chooser.getSelectedFile();

        urlTemporal = f.getAbsolutePath();
        this.BotonSend.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_UploadActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusGained

        DefaultComboBoxModel model = (DefaultComboBoxModel) this.jComboBox2.getModel();
        model.removeAllElements();
        for (int i = 0; i < SingletonConfiguracion.ListaDeProcesos.size() - 2; i++) {

            if (SingletonConfiguracion.ListaDeProcesos.get(i).getIdentificadorProceso() != this.jComboBox1.getSelectedItem().toString()) {
                model.addElement(SingletonConfiguracion.ListaDeProcesos.get(i).getIdentificadorProceso());
            }
        }
        this.jComboBox2.setModel(model);
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2FocusGained

    private void BotonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSendActionPerformed

        // esto es cmo la caratula porque falta hacer los procesos con sus respectivos emisores y receptores y toda la cosa
        if (SingletonConfiguracion.Formato == TipoContenido.Audio || SingletonConfiguracion.Formato == TipoContenido.Imagen || SingletonConfiguracion.Formato == TipoContenido.Video) {
            SingletonConfiguracion.url = urlTemporal;
            int tamArchivo= (int) SingletonConfiguracion.f2.length()/1000000;
            if (SingletonConfiguracion.tamañoLimite != 0) {
                if(tamArchivo<=SingletonConfiguracion.tamañoLimite){
                    if (SingletonConfiguracion.prioridad == false) {
                        if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {

                            Mensaje sms = new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                            Proceso.send(sms);
                        }
                        if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                            Mensaje sms = new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                            Proceso.send(sms);

                        }
                        /*Mensaje sms = new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                        Proceso.send(sms);*/
                    } else {
                        if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
                            Mensaje sms = new Mensaje(Integer.parseInt(this.PrioridadComboBox.getSelectedItem().toString()), this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                            Proceso.send(sms);
                        }
                        if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                            Mensaje sms = new Mensaje(Integer.parseInt(this.PrioridadComboBox.getSelectedItem().toString()), this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                            Proceso.send(sms);

                        }

                        /* Mensaje sms = new Mensaje(Integer.parseInt(this.PrioridadComboBox.getSelectedItem().toString()), this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                        Proceso.send(sms);*/
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "El largo es más grande que el establecido");
                }
            }
        } else {
            SingletonConfiguracion.mensaje = this.jTextArea1.getText();
            if (SingletonConfiguracion.tamañoLimite != 0) {
                if (SingletonConfiguracion.mensaje.length() > SingletonConfiguracion.tamañoLimite) {
                    JOptionPane.showMessageDialog(null, "El largo es más grande que el establecido");
                    return;
                } else {
                    //aqui va
                    if (SingletonConfiguracion.prioridad == false) {
                        if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
                            System.out.println("Entro a dinamico o estatico");
                            Mensaje sms = new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.mensaje, false);
                            Proceso.send(sms);
                        }
                        if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                            Mensaje sms = new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.mensaje, false);
                            Proceso.send(sms);

                        }
                        /*Mensaje sms = new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                        Proceso.send(sms);*/
                    } else {
                        if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
                            Mensaje sms = new Mensaje(Integer.parseInt(this.PrioridadComboBox.getSelectedItem().toString()), this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.mensaje, false);
                            Proceso.send(sms);
                        }
                        if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                            Mensaje sms = new Mensaje(Integer.parseInt(this.PrioridadComboBox.getSelectedItem().toString()), this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.mensaje, false);
                            Proceso.send(sms);

                        }

                        /* Mensaje sms = new Mensaje(Integer.parseInt(this.PrioridadComboBox.getSelectedItem().toString()), this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                        Proceso.send(sms);*/
                    }
                }
            } else {
                if (SingletonConfiguracion.prioridad == false) {
                    if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
                        System.out.println("Entro a dinamico o estatico");
                        Mensaje sms = new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.mensaje, false);
                        Proceso.send(sms);
                    }
                    if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                        Mensaje sms = new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.mensaje, false);
                        Proceso.send(sms);

                    }
                    /*Mensaje sms = new Mensaje(0, this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                    Proceso.send(sms);*/
                } else {
                    if (SingletonConfiguracion.indirectoDinamico == true || SingletonConfiguracion.indirectoEstatico == true) {
                        Mensaje sms = new Mensaje(Integer.parseInt(this.PrioridadComboBox.getSelectedItem().toString()), this.jComboBox1.getSelectedItem().toString(), "", SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.mensaje, false);
                        Proceso.send(sms);
                    }
                    if (SingletonConfiguracion.directoRecieveExplicito == true || SingletonConfiguracion.directoRecieveImplicito == true) {
                        Mensaje sms = new Mensaje(Integer.parseInt(this.PrioridadComboBox.getSelectedItem().toString()), this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.mensaje, false);
                        Proceso.send(sms);

                    }

                    /* Mensaje sms = new Mensaje(Integer.parseInt(this.PrioridadComboBox.getSelectedItem().toString()), this.jComboBox1.getSelectedItem().toString(), this.jComboBox2.getSelectedItem().toString(), SingletonConfiguracion.Formato, SingletonConfiguracion.tamañoLimite, SingletonConfiguracion.url, false);
                    Proceso.send(sms);*/
                }
            }
        }

        /*long endTime = System.currentTimeMillis() + 2000;
        while (System.currentTimeMillis() < endTime) {
            jTextField1.setText("Prueba de llegada.");
            jTextField1.setText("Prueba de llegada..");
            jTextField1.setText("Prueba de llegada...");
        } */
        /*long start = System.currentTimeMillis();
        while (System.currentTimeMillis() - start <= 500) {
            jTextField1.setText("Prueba de llegada.");
            // jTextField1.setText("Prueba de llegada..");
            //jTextField1.setText("Prueba de llegada...");
        }

        while (System.currentTimeMillis() - start <= 2000) {
            jTextField1.setText("Prueba de llegada..");
        }

        while (System.currentTimeMillis() - start <= 4000) {
            jTextField1.setText("Prueba de llegada...");
        }*/
        /*while (true) {
            jTextField1.setText("Prueba de llegada.");
            jTextField1.setText("Prueba de llegada..");
            jTextField1.setText("Prueba de llegada...");

        }*/
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonSendActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MousePressed

    }//GEN-LAST:event_jComboBox1MousePressed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        DefaultComboBoxModel model = (DefaultComboBoxModel) this.jComboBox1.getModel();
        model.removeAllElements();
        for (int i = 0; i < SingletonConfiguracion.ListaDeProcesos.size() - 2; i++) {
            model.addElement(SingletonConfiguracion.ListaDeProcesos.get(i).getIdentificadorProceso());
        }
        this.jComboBox1.setModel(model);        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1FocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        Batch batch = new Batch();
        try {
            batch.leerBatch();
            JOptionPane.showMessageDialog(null, "El Batch se ejecutó con éxito");
            DisplayActual display = new DisplayActual();
            display.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Interactivo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interactivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interactivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interactivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interactivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interactivo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonSend;
    private javax.swing.JButton DisplaySistema;
    private javax.swing.JComboBox<String> PrioridadComboBox;
    private javax.swing.JButton Recibir;
    private javax.swing.JButton Subscribe;
    private javax.swing.JButton Upload;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

    private void While(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
